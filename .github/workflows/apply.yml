name: Manual Terraform Apply
on: { workflow_dispatch: {} }

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Resolve latest image digest from ECR
        id: digest
        env:
          ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          REGION:  ${{ secrets.AWS_REGION }}
        run: |
          REPO="gatus-project"
          DIGEST=$(aws ecr describe-images \
            --repository-name "$REPO" \
            --query 'reverse(sort_by(imageDetails,& imagePushedAt))[0].imageDigest' \
            --output text)

          if [ "$DIGEST" = "None" ] || [ -z "$DIGEST" ]; then
            echo "No images found in ECR/$REPO" >&2
            exit 1
          fi

          echo "IMAGE_URI=$ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$REPO@$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Terraform apply
        working-directory: ./terraform
        env:
          TF_VAR_vpc_id:          ${{ secrets.TF_VAR_VPC_ID }}
          TF_VAR_subnets_id_list: ${{ secrets.TF_VAR_SUBNETS_ID_LIST }}
          TF_VAR_image_url:       ${{ steps.digest.outputs.IMAGE_URI }}
        run: terraform apply -auto-approve -input=false

      - name: Wait for ECS service to be stable
        run: aws ecs wait services-stable --cluster gatus-cluster --services gatus-service
